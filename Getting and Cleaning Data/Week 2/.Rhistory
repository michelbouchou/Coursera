?inv
?solve
source("coursera/cacheMatrix.R")
test = function(mat){
## @mat: an invertible matrix
temp = makeCacheMatrix(mat)
start.time = Sys.time()
cacheSolve(temp)
dur = Sys.time() - start.time
print(dur)
start.time = Sys.time()
cacheSolve(temp)
dur = Sys.time() - start.time
print(dur)
}
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
source("coursera/cacheMatrix.R")
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
test(mat1)
test(mat1)
r <- rnorm(100, 5, 10)
head(r)
?rnorm
r
summary(r)
d <- dnorm(1:100, 2)
summary(d)
d
p <- pnorm(1:100, 2)
p
clear()
?rpois
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(y)
plot(x, y)
getwd()
ls()
train <- read.csv("train.csv")
str(train)
test <- read.csv("test.csv")
head("train", n = 10)
head(train, n = 10)
head(train, n = 10)
count.fields(train)
count.fields("train.csv")
install.packages("ROAuth")
library("ROAuth")
myapp = OAuth_app("github")
install.packages("httr")
library("httr")
myapp = OAuth_app("github")
myapp = oauth_app("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("RMySQL")
library("RMySQL")
ucscDb <- dbConnect(MySQL(), user="root", host="localhost")
result <- dbGetQuery("show databases;")
dbDisconnect(ucscDb)
setwd("sd/Getting and Cleaning Data/Week 2/")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "data.csv", method = "curl")
acs <- read.csv("data.csv")
class(acs)
install.packages("sqldf")
library("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs")
?sqldf
htmlCode <- readLines(url("http://biostat.jhsph.edu/~jleek/contact.html"))
nrow(htmlCode)
htmlCode
class(htmlCode)
nchar(htmlCode[10,])
nchar(htmlCode[10])
nchar(htmlCode[c(10,20,30,100)])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
head(lines)
str(lines)
lines
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
d
data("UCBAdmissions")
DF <- as.data.frame(UCBAdmissions)
summary(DF)
DF
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit,data = DF)
xt
warpbreaks$replicate <- rep(1:9, len = 54)
xt = xtabs(breaks ~., data=warpbreaks)
xt
ftable(xt)
